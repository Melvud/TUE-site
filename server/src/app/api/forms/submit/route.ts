import { NextResponse } from 'next/server'
import { getPayload } from 'payload'
import config from '@payload-config'

export async function POST(request: Request) {
  try {
    const data = await request.json()
    const { type, subject, ...formData } = data

    console.log('üìù Form submission:', { type, subject, formData })

    const payload = await getPayload({ config })

    // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ email
    const emailSettings = await payload.findGlobal({
      slug: 'email-settings',
    })

    console.log('üìß Email enabled:', emailSettings.enabled)

    if (type === 'contact') {
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é —Ñ–æ—Ä–º—É
      const submission = await payload.create({
        collection: 'contact-submissions',
        data: {
          name: formData.name,
          email: formData.email,
          message: formData.message,
          formData,
        },
      })

      console.log('‚úÖ Contact submission saved:', submission.id)

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
      if (emailSettings.enabled) {
        try {
          const { sendAdminNotification } = await import('@/lib/email')
          await sendAdminNotification('contact', formData)
          console.log('‚úÖ Admin notification sent')
        } catch (emailError) {
          console.error('‚ùå Failed to send admin notification:', emailError)
          // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å, –µ—Å–ª–∏ email –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è
        }
      }

      return NextResponse.json({ success: true, id: submission.id })
    }

    if (type === 'join') {
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞—è–≤–∫—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ
      const submission = await payload.create({
        collection: 'join-submissions',
        data: {
          name: formData.name,
          email: formData.email,
          formData,
          status: 'pending',
        },
      })

      console.log('‚úÖ Join submission saved:', submission.id)

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
      if (emailSettings.enabled) {
        try {
          const { sendAdminNotification } = await import('@/lib/email')
          await sendAdminNotification('join', formData)
          console.log('‚úÖ Admin notification sent')
        } catch (emailError) {
          console.error('‚ùå Failed to send admin notification:', emailError)
          // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å, –µ—Å–ª–∏ email –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è
        }
      }

      return NextResponse.json({ success: true, id: submission.id })
    }

    return NextResponse.json(
      { success: false, error: 'Invalid form type' },
      { status: 400 }
    )
  } catch (error) {
    console.error('‚ùå Form submission error:', error)

    return NextResponse.json(
      {
        success: false,
        error: error instanceof Error ? error.message : 'Submission failed',
      },
      { status: 500 }
    )
  }
}