/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    events: Event;
    news: News;
    members: Member;
    membersPast: MembersPast;
    'contact-submissions': ContactSubmission;
    'join-submissions': JoinSubmission;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    events: EventsSelect<false> | EventsSelect<true>;
    news: NewsSelect<false> | NewsSelect<true>;
    members: MembersSelect<false> | MembersSelect<true>;
    membersPast: MembersPastSelect<false> | MembersPastSelect<true>;
    'contact-submissions': ContactSubmissionsSelect<false> | ContactSubmissionsSelect<true>;
    'join-submissions': JoinSubmissionsSelect<false> | JoinSubmissionsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    home: Home;
    about: About;
    join: Join;
    contact: Contact;
    'email-settings': EmailSetting;
    'email-templates': EmailTemplate;
  };
  globalsSelect: {
    home: HomeSelect<false> | HomeSelect<true>;
    about: AboutSelect<false> | AboutSelect<true>;
    join: JoinSelect<false> | JoinSelect<true>;
    contact: ContactSelect<false> | ContactSelect<true>;
    'email-settings': EmailSettingsSelect<false> | EmailSettingsSelect<true>;
    'email-templates': EmailTemplatesSelect<false> | EmailTemplatesSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events".
 */
export interface Event {
  id: number;
  title: string;
  slug: string;
  date: string;
  summary?: string | null;
  description?: string | null;
  googleFormUrl?: string | null;
  cover?: (number | null) | Media;
  content?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * ‚≠ê Featured event on Events page (only one can be Latest)
   */
  latest?: boolean | null;
  published?: boolean | null;
  publishAt?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "news".
 */
export interface News {
  id: number;
  title: string;
  slug: string;
  date?: string | null;
  summary?: string | null;
  cover?: (number | null) | Media;
  content?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  published?: boolean | null;
  publishAt?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "members".
 */
export interface Member {
  id: number;
  name: string;
  role: string;
  photo: number | Media;
  email?: string | null;
  /**
   * Full LinkedIn URL
   */
  linkedin?: string | null;
  instagram?: string | null;
  /**
   * Display order (lower = first)
   */
  order?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "membersPast".
 */
export interface MembersPast {
  id: number;
  name: string;
  role?: string | null;
  photo: number | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-submissions".
 */
export interface ContactSubmission {
  id: number;
  name: string;
  email: string;
  message?: string | null;
  /**
   * All form fields submitted
   */
  formData?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  status?: ('new' | 'in-progress' | 'replied' | 'closed') | null;
  /**
   * Internal notes (not visible to user)
   */
  adminNotes?: string | null;
  /**
   * Override default template from Email Templates
   */
  useCustomTemplate?: boolean | null;
  /**
   * Compose and send reply email
   */
  replyTemplate?: {
    subject?: string | null;
    body?: string | null;
    /**
     * Check this box and click Save to send the reply immediately
     */
    sendNow?: boolean | null;
    sent?: boolean | null;
    sentAt?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "join-submissions".
 */
export interface JoinSubmission {
  id: number;
  name: string;
  email: string;
  /**
   * All form fields submitted by the applicant
   */
  formData?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  status?: ('pending' | 'accepted' | 'rejected' | 'in-review') | null;
  /**
   * Internal notes about this application
   */
  reviewNotes?: string | null;
  /**
   * Override default templates from Email Templates settings
   */
  useCustomTemplate?: boolean | null;
  /**
   * Email sent when accepting the application
   */
  acceptanceEmail?: {
    subject?: string | null;
    /**
     * Available: {{name}}, {{email}}
     */
    body?: string | null;
    /**
     * Check this box and click Save to send the email immediately
     */
    sendNow?: boolean | null;
    sent?: boolean | null;
    sentAt?: string | null;
  };
  /**
   * Email sent when rejecting the application
   */
  rejectionEmail?: {
    subject?: string | null;
    /**
     * Available: {{name}}, {{email}}
     */
    body?: string | null;
    /**
     * Check this box and click Save to send the email immediately
     */
    sendNow?: boolean | null;
    sent?: boolean | null;
    sentAt?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'events';
        value: number | Event;
      } | null)
    | ({
        relationTo: 'news';
        value: number | News;
      } | null)
    | ({
        relationTo: 'members';
        value: number | Member;
      } | null)
    | ({
        relationTo: 'membersPast';
        value: number | MembersPast;
      } | null)
    | ({
        relationTo: 'contact-submissions';
        value: number | ContactSubmission;
      } | null)
    | ({
        relationTo: 'join-submissions';
        value: number | JoinSubmission;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events_select".
 */
export interface EventsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  date?: T;
  summary?: T;
  description?: T;
  googleFormUrl?: T;
  cover?: T;
  content?: T;
  latest?: T;
  published?: T;
  publishAt?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "news_select".
 */
export interface NewsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  date?: T;
  summary?: T;
  cover?: T;
  content?: T;
  published?: T;
  publishAt?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "members_select".
 */
export interface MembersSelect<T extends boolean = true> {
  name?: T;
  role?: T;
  photo?: T;
  email?: T;
  linkedin?: T;
  instagram?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "membersPast_select".
 */
export interface MembersPastSelect<T extends boolean = true> {
  name?: T;
  role?: T;
  photo?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-submissions_select".
 */
export interface ContactSubmissionsSelect<T extends boolean = true> {
  name?: T;
  email?: T;
  message?: T;
  formData?: T;
  status?: T;
  adminNotes?: T;
  useCustomTemplate?: T;
  replyTemplate?:
    | T
    | {
        subject?: T;
        body?: T;
        sendNow?: T;
        sent?: T;
        sentAt?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "join-submissions_select".
 */
export interface JoinSubmissionsSelect<T extends boolean = true> {
  name?: T;
  email?: T;
  formData?: T;
  status?: T;
  reviewNotes?: T;
  useCustomTemplate?: T;
  acceptanceEmail?:
    | T
    | {
        subject?: T;
        body?: T;
        sendNow?: T;
        sent?: T;
        sentAt?: T;
      };
  rejectionEmail?:
    | T
    | {
        subject?: T;
        body?: T;
        sendNow?: T;
        sent?: T;
        sentAt?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home".
 */
export interface Home {
  id: number;
  hero?: {
    /**
     * Hero background image
     */
    image?: (number | null) | Media;
  };
  /**
   * Rotating phrases in hero section
   */
  typedPhrases: {
    value: string;
    id?: string | null;
  }[];
  _status?: ('draft' | 'published') | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * About page content
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about".
 */
export interface About {
  id: number;
  sections: {
    layout: 'text-image' | 'image-text' | 'text-only' | 'image-only';
    title?: string | null;
    text?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    image?: (number | null) | Media;
    id?: string | null;
  }[];
  supportedByTitle?: string | null;
  supportedByDescription?: string | null;
  supportedByLogo?: (number | null) | Media;
  partnersTitle?: string | null;
  partnersDescription?: string | null;
  /**
   * Add companies that support PhE
   */
  partners?:
    | {
        name: string;
        logo: number | Media;
        website?: string | null;
        id?: string | null;
      }[]
    | null;
  _status?: ('draft' | 'published') | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "join".
 */
export interface Join {
  id: number;
  content?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  formFields?:
    | {
        name: string;
        label: string;
        type: 'text' | 'email' | 'textarea' | 'select';
        placeholder?: string | null;
        required?: boolean | null;
        options?:
          | {
              value: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact".
 */
export interface Contact {
  id: number;
  title: string;
  /**
   * Text shown below the title
   */
  description?: string | null;
  socialLinks?: {
    linkedin?: string | null;
    instagram?: string | null;
  };
  /**
   * Optional content displayed above the form
   */
  content?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  formFields: {
    /**
     * Internal name (e.g., "name", "email", "phone")
     */
    name: string;
    /**
     * Visible label for the user
     */
    label: string;
    type: 'text' | 'email' | 'tel' | 'number' | 'textarea' | 'select' | 'checkbox';
    placeholder?: string | null;
    required?: boolean | null;
    rows?: number | null;
    options?:
      | {
          label: string;
          value: string;
          id?: string | null;
        }[]
      | null;
    id?: string | null;
  }[];
  submitButtonText?: string | null;
  successMessage?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * Configure email sending settings (SMTP)
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-settings".
 */
export interface EmailSetting {
  id: number;
  provider: 'gmail' | 'sendgrid' | 'mailgun' | 'custom';
  /**
   * Turn on to start sending emails
   */
  enabled?: boolean | null;
  gmailSettings?: {
    user: string;
    /**
     * 16-character app password
     */
    appPassword: string;
    /**
     * Display name in emails
     */
    fromName?: string | null;
  };
  sendgridSettings?: {
    apiKey: string;
    fromEmail: string;
    fromName?: string | null;
  };
  mailgunSettings?: {
    apiKey: string;
    domain: string;
    fromEmail: string;
    fromName?: string | null;
  };
  customSettings?: {
    host: string;
    port: number;
    /**
     * Enable for port 465
     */
    secure?: boolean | null;
    user: string;
    password: string;
    fromEmail: string;
    fromName?: string | null;
  };
  /**
   * Send a test email to verify settings
   */
  testEmail?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * Customize email templates for automated responses
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-templates".
 */
export interface EmailTemplate {
  id: number;
  acceptanceSubject: string;
  /**
   * Available variables: {{name}}, {{email}}
   */
  acceptanceBody: string;
  rejectionSubject: string;
  /**
   * Available variables: {{name}}, {{email}}
   */
  rejectionBody: string;
  /**
   * Can be overridden per-response in Contact Submissions
   */
  contactReplySubject: string;
  /**
   * Available variables: {{name}}, {{email}}, {{message}}
   */
  contactReplyBody: string;
  /**
   * Email template best practices
   */
  tips?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home_select".
 */
export interface HomeSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        image?: T;
      };
  typedPhrases?:
    | T
    | {
        value?: T;
        id?: T;
      };
  _status?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about_select".
 */
export interface AboutSelect<T extends boolean = true> {
  sections?:
    | T
    | {
        layout?: T;
        title?: T;
        text?: T;
        image?: T;
        id?: T;
      };
  supportedByTitle?: T;
  supportedByDescription?: T;
  supportedByLogo?: T;
  partnersTitle?: T;
  partnersDescription?: T;
  partners?:
    | T
    | {
        name?: T;
        logo?: T;
        website?: T;
        id?: T;
      };
  _status?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "join_select".
 */
export interface JoinSelect<T extends boolean = true> {
  content?: T;
  formFields?:
    | T
    | {
        name?: T;
        label?: T;
        type?: T;
        placeholder?: T;
        required?: T;
        options?:
          | T
          | {
              value?: T;
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact_select".
 */
export interface ContactSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  socialLinks?:
    | T
    | {
        linkedin?: T;
        instagram?: T;
      };
  content?: T;
  formFields?:
    | T
    | {
        name?: T;
        label?: T;
        type?: T;
        placeholder?: T;
        required?: T;
        rows?: T;
        options?:
          | T
          | {
              label?: T;
              value?: T;
              id?: T;
            };
        id?: T;
      };
  submitButtonText?: T;
  successMessage?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-settings_select".
 */
export interface EmailSettingsSelect<T extends boolean = true> {
  provider?: T;
  enabled?: T;
  gmailSettings?:
    | T
    | {
        user?: T;
        appPassword?: T;
        fromName?: T;
      };
  sendgridSettings?:
    | T
    | {
        apiKey?: T;
        fromEmail?: T;
        fromName?: T;
      };
  mailgunSettings?:
    | T
    | {
        apiKey?: T;
        domain?: T;
        fromEmail?: T;
        fromName?: T;
      };
  customSettings?:
    | T
    | {
        host?: T;
        port?: T;
        secure?: T;
        user?: T;
        password?: T;
        fromEmail?: T;
        fromName?: T;
      };
  testEmail?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "email-templates_select".
 */
export interface EmailTemplatesSelect<T extends boolean = true> {
  acceptanceSubject?: T;
  acceptanceBody?: T;
  rejectionSubject?: T;
  rejectionBody?: T;
  contactReplySubject?: T;
  contactReplyBody?: T;
  tips?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}